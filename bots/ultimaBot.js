/**
 * –ë–ª–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–æ–¥—É–ª–µ–π
 */
import TelegramBot from 'node-telegram-bot-api';
import CRON from 'node-cron';
import FS from 'fs';
import PATH from 'path';
import AXIOS from 'axios';
import moment from 'moment';
import {fileURLToPath} from 'url';
import {dirname} from 'path';


/**
 * –ë–ª–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç
 */
const TEST_MODE = false;
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

moment.locale('ru');

/**
 * Telegram bot
 */
const TOKEN = '7230407089:AAEItWerSIi0tQh2NPEDXsChmMz8WLxP74s';
const BOT = new TelegramBot(TOKEN, {polling: true});
const SEND_TO = 738829247;
const LOG_GROUP_ID = -1001253575722;
const GROUP_ID = -1002147555826;

/**
 * New message event
 */
BOT.on('message', async (msg) => {
  console.log(msg);
  const DIVIDER16 = `\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n`;
  let logMessage = DIVIDER16;
  const CHAT_ID = msg.chat.id;
  const USER_NAME = `${msg.from.first_name ?
    msg.from.first_name :
    ' '} ${msg.from.last_name ?
    msg.from.last_name :
    ' '}`;

  logMessage += `${USER_NAME}, ${CHAT_ID}, ${msg.from.username}`;
  logMessage += DIVIDER16;
  logMessage += msg.text;
  logMessage += DIVIDER16;
  logMessage += msg;
  logMessage += DIVIDER16;

  /* BOT.sendMessage(
    CHAT_ID,
    `–ü—Ä–∏–≤–µ—Ç!
–†–∞–¥, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—à—å—Å—è –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º!
–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ!
–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏ –º–æ–µ–º—É –∞–≤—Ç–æ—Ä—É:`,
  ).then(() => {
    BOT.sendContact(
      CHAT_ID,
      '+79883857654',
      '–ù–∏–∫–∏—Ç–∞',
    ).then(() => false);
  });*/

  if (CHAT_ID !== GROUP_ID) { // –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await BOT.sendMessage(LOG_GROUP_ID, logMessage);
  }

  // -1002147555826
});

const freeParkingNotify = async () => {
  await BOT.sendMessage(
      GROUP_ID,
      `üöô –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞–≤—Ç–æ–∫—É—Ä—å–µ—Ä–∞–º: —Å–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –∞ –∑–Ω–∞—á–∏—Ç <a href="https://parking.mos.ru/parking/street/rules/">–ø–ª–∞—Ç–Ω–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ (200 —Ä—É–±/—á–∞—Å –∏ –¥–µ—à–µ–≤–ª–µ)</a> ‚Äî <strong>–ë–ï–°–ü–õ–ê–¢–ù–ê–Ø</strong>

<em>(–Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ª—É—á—à–µ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –∏–ª–∏ –Ω–∞ —Å—Ç–æ–ª–±–µ)</em>`,
      {
        disable_notification: true,
        parse_mode: 'HTML',
      },
  );
};

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CRON
 */
CRON.schedule('0 11 * * 0', freeParkingNotify, {});
